/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import controlador.AtraccionControlador;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Atraccion;

/**
 *
 * @author Heidy
 */
public class VistaAtracciones extends javax.swing.JFrame {

    /**
     * Creates new form VistaAtracciones
     */
    public VistaAtracciones() {
        initComponents();
        setTitle("Atracciones");
        cargarAtraccionesEnTabla(tablaAtracciones);
        agregarAtraccionesVisitadas(listaAtracciones);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btnAtras = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAtraccionId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtClasificacion = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtCondicionesUso = new javax.swing.JTextField();
        btnBorrar = new javax.swing.JButton();
        btnLeerTodas = new javax.swing.JButton();
        btnCrear = new javax.swing.JButton();
        btnLeer = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAtracciones = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        txtAlturaMinima = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaAtracciones = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jLabel2.setText("Popularidad");

        btnAtras.setText("Atrás");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        jLabel1.setText("Aquí podrás gestionar la información de cada atracción");

        jLabel3.setText("atraccion_id");

        jLabel4.setText("nombre");

        jLabel5.setText("estado");

        txtEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Habilitada", "Daño", "Mantenimiento" }));

        jLabel6.setText("clasificación");

        txtClasificacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Familiar", "Adrenalina", "Infantil" }));

        jLabel7.setText("descripción");

        jLabel8.setText("condiciones uso");

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnLeerTodas.setText("Leer todas");
        btnLeerTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeerTodasActionPerformed(evt);
            }
        });

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnLeer.setText("Leer");
        btnLeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeerActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        tablaAtracciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "atraccion_id", "nombre", "descripción", "clasificación", "condiciones uso", "estado", "altura mínima"
            }
        ));
        jScrollPane1.setViewportView(tablaAtracciones);

        jLabel9.setText("altura mínima");

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jLabel10.setText("Atracciones");

        jScrollPane2.setViewportView(listaAtracciones);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAtras)
                        .addGap(38, 38, 38))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel3)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(txtAtraccionId, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel4)
                                                            .addComponent(jLabel5))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(txtEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(txtNombre))))
                                                .addGap(46, 46, 46)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel8)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(txtCondicionesUso))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel7)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel9)
                                                        .addGap(7, 7, 7)
                                                        .addComponent(txtAlturaMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnLeerTodas, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(btnCrear, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(btnEditar, javax.swing.GroupLayout.Alignment.TRAILING))
                                                .addGap(39, 39, 39)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(btnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnLeer)))))))
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(35, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAtras)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtAtraccionId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(txtCondicionesUso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(txtAlturaMinima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCrear)
                                .addGap(16, 16, 16)
                                .addComponent(btnEditar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnLeer)
                                .addGap(16, 16, 16)
                                .addComponent(btnBorrar)))
                        .addGap(18, 18, 18)
                        .addComponent(btnLeerTodas)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        dispose();
        VistaAdministracion vistaAdministracion = new VistaAdministracion();
        vistaAdministracion.setLocationRelativeTo(null);
        vistaAdministracion.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        int atraccionId = Integer.parseInt(txtAtraccionId.getText());
        
        AtraccionControlador atraccionControlador = new AtraccionControlador();
        atraccionControlador.eliminarAtraccion(atraccionId);
        
        JOptionPane.showMessageDialog(this, "Atracción eliminada correctamente.");
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnLeerTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeerTodasActionPerformed
        cargarAtraccionesEnTabla(tablaAtracciones);
    }//GEN-LAST:event_btnLeerTodasActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        // Convertir los valores ingresados a los tipos correspondientes
        String nombre = txtNombre.getText();  // Texto, no necesita conversión
        String descripcion = txtDescripcion.getText();// Convierte a int
        String clasificacion = (String) txtClasificacion.getSelectedItem(); // Texto, no necesita conversión
        String condicionesUso = txtCondicionesUso.getText();
        String estado = (String) txtEstado.getSelectedItem();
        double alturaMinima = Double.parseDouble(txtAlturaMinima.getText());
        

        // Crear el objeto Cliente con los datos obtenidos
        Atraccion atraccion = new Atraccion(nombre,descripcion,clasificacion,condicionesUso,estado,alturaMinima);

        // Crear el controlador y llamar al método insertarCliente
        AtraccionControlador atraccionControlador = new AtraccionControlador();
        atraccionControlador.insertarAtraccion(atraccion);

        JOptionPane.showMessageDialog(this, "Atraccion creada correctamente.");
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnLeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeerActionPerformed
        int atraccionId = Integer.parseInt(txtAtraccionId.getText());
        
        AtraccionControlador atraccionControlador = new AtraccionControlador();
        Atraccion atraccion = atraccionControlador.obtenerAtraccionPorId(atraccionId);
        
        // Obtener el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) tablaAtracciones.getModel();

        // Limpiar la tabla antes de cargar nuevos datos
        modelo.setRowCount(0);
        
        if (atraccion != null) {
            // Agregar una única fila al modelo
            modelo.addRow(new Object[]{
                atraccion.getId(),
                atraccion.getNombre(),
                atraccion.getDescripcion(),
                atraccion.getClasificacion(),
                atraccion.getCondicionesUso(),
                atraccion.getEstado(),
                atraccion.getAlturaMinima()
            });
        } else {
            // Mostrar mensaje si no se encontró la visita
            JOptionPane.showMessageDialog(null, "No se encontró la atracción con el ID especificado.",
                "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnLeerActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        
        // Convertir los valores ingresados a los tipos correspondientes
        int atraccionId = Integer.parseInt(txtAtraccionId.getText());
        String nombre = txtNombre.getText();  // Texto, no necesita conversión
        String descripcion = txtDescripcion.getText();// Convierte a int
        String clasificacion = (String) txtClasificacion.getSelectedItem(); // Texto, no necesita conversión
        String condicionesUso = txtCondicionesUso.getText();
        String estado = (String) txtEstado.getSelectedItem();
        double alturaMinima = Double.parseDouble(txtAlturaMinima.getText());
        
        Atraccion atraccion = new Atraccion(nombre,descripcion,clasificacion,condicionesUso,estado,alturaMinima);
        
        AtraccionControlador atraccionControlador = new AtraccionControlador();
        atraccionControlador.actualizarAtraccion(atraccionId, atraccion);
        
        JOptionPane.showMessageDialog(this, "Atracción actualizada correctamente.");
    }//GEN-LAST:event_btnEditarActionPerformed
    
    public void cargarAtraccionesEnTabla(javax.swing.JTable tablaAtracciones) {
        // Obtener el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) tablaAtracciones.getModel();

        // Limpiar la tabla antes de cargar nuevos datos
        modelo.setRowCount(0);

        // Crear un controlador o acceso al DAO de Clientes
        AtraccionControlador atraccionControlador = new AtraccionControlador();

        // Obtener todos los clientes desde el controlador
        List<Atraccion> atracciones = atraccionControlador.obtenerTodasLasAtracciones();

        // Iterar por la lista de clientes y agregar filas al modelo
        for (Atraccion atraccion : atracciones) {
            modelo.addRow(new Object[]{
                atraccion.getId(),
                atraccion.getNombre(),
                atraccion.getDescripcion(),
                atraccion.getClasificacion(),
                atraccion.getCondicionesUso(),
                atraccion.getEstado(),
                atraccion.getAlturaMinima()

            });
        }
    }
    
    public void agregarAtraccionesVisitadas(javax.swing.JList<String> listaAtracciones) {
        // Verificar si el modelo está vacío o no está asignado
        if (listaAtracciones.getModel() == null || !(listaAtracciones.getModel() instanceof DefaultListModel)) {
            // Crear un modelo por defecto y asignarlo al JList si no tiene uno
            DefaultListModel<String> model = new DefaultListModel<>();
            listaAtracciones.setModel(model);
        }

        // Obtener el modelo de la lista
        DefaultListModel<String> model = (DefaultListModel<String>) listaAtracciones.getModel();

        // Crear controlador y obtener las alertas
        AtraccionControlador atraccionControlador = new AtraccionControlador();
        List<String> atraccionesVisitadas = atraccionControlador.obtenerAtraccionesVisitadas();
        
        for (String atraccionVisitada : atraccionesVisitadas) {
                model.addElement(atraccionVisitada);  // Agregar cada alerta al DefaultListModel
        }
    }
            
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnLeer;
    private javax.swing.JButton btnLeerTodas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listaAtracciones;
    private javax.swing.JTable tablaAtracciones;
    private javax.swing.JTextField txtAlturaMinima;
    private javax.swing.JTextField txtAtraccionId;
    private javax.swing.JComboBox<String> txtClasificacion;
    private javax.swing.JTextField txtCondicionesUso;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JComboBox<String> txtEstado;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
