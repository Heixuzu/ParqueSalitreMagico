/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import controlador.ClienteControlador;
import controlador.TiqueteControlador;
import controlador.VisitasControlador;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;
import modelo.Tiquete;
import modelo.Visitas;

/**
 *
 * @author Heidy
 */
public class VistaPublicidad extends javax.swing.JFrame {

    /**
     * Creates new form vistaPublicidad
     */
    public VistaPublicidad() {
        initComponents();
        setTitle("Publicidad");
        cargarVisitasEnTabla(tablaVisitas);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaVisitas = new javax.swing.JTable();
        btnCrear = new javax.swing.JButton();
        btnLeer = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtClienteId = new javax.swing.JTextField();
        txtTiqueteId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtVisitaId = new javax.swing.JTextField();
        btnLeerTodas = new javax.swing.JButton();
        btnAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jLabel2.setText("Visitas");

        tablaVisitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "visita_id", "cliente_id", "tiquete_id", "nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaVisitas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tablaVisitas.setShowGrid(true);
        jScrollPane1.setViewportView(tablaVisitas);

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnLeer.setText("Leer");
        btnLeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeerActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        jLabel1.setText("Aquí podrás gestionar las visitas de cada cliente");

        jLabel3.setText("cliente_id");

        jLabel4.setText("tiquete_id");

        txtClienteId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteIdActionPerformed(evt);
            }
        });

        jLabel5.setText("visita_id");

        btnLeerTodas.setText("Leer todas");
        btnLeerTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeerTodasActionPerformed(evt);
            }
        });

        btnAtras.setText("Atrás");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(20, 20, 20))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(10, 10, 10)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtVisitaId, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                                    .addComponent(txtTiqueteId)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtClienteId)))
                        .addGap(117, 117, 117)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCrear, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnEditar, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnLeer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(btnLeerTodas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAtras))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(24, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(btnAtras))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCrear)
                        .addGap(16, 16, 16)
                        .addComponent(btnEditar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnLeer)
                        .addGap(16, 16, 16)
                        .addComponent(btnBorrar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtVisitaId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtClienteId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTiqueteId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLeerTodas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeerActionPerformed
        int visitaId = Integer.parseInt(txtVisitaId.getText());
        
        VisitasControlador visitasControlador = new VisitasControlador();
        Visitas visita = visitasControlador.obtenerVisitaPorId(visitaId);
        
        // Obtener el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) tablaVisitas.getModel();

        // Limpiar la tabla antes de cargar nuevos datos
        modelo.setRowCount(0);
        
        if (visita != null) {
            // Obtener los datos asociados
            Cliente cliente = visita.getClienteAsociado();
            Tiquete tiquete = visita.getTiqueteAsociado();

            // Agregar una única fila al modelo
            modelo.addRow(new Object[]{
                visita.getId(),       // ID de la visita
                cliente.getId(),      // ID del cliente
                tiquete.getId(),      // ID del tiquete
                cliente.getNombre()   // Nombre del cliente
            });
        } else {
            // Mostrar mensaje si no se encontró la visita
            JOptionPane.showMessageDialog(null, "No se encontró la visita con el ID especificado.",
                                          "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnLeerActionPerformed

    private void txtClienteIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClienteIdActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        int clienteId = Integer.parseInt(txtClienteId.getText());
        int tiqueteId = Integer.parseInt(txtTiqueteId.getText());
        
        ClienteControlador clienteControlador = new ClienteControlador();
        Cliente clienteAsociado = clienteControlador.obtenerClientePorId(clienteId);
        
        TiqueteControlador tiqueteControlador = new TiqueteControlador();
        Tiquete tiqueteAsociado = tiqueteControlador.obtenerTiquetePorId(tiqueteId);
        
        // Crear el objeto Visita con los datos obtenidos
        Visitas visita = new Visitas(clienteAsociado, tiqueteAsociado);
                    
        //Crear el controlador y llamar al método insertarVisita
        VisitasControlador visitasControlador = new VisitasControlador();
        visitasControlador.insertarVisita(visita);
        
        JOptionPane.showMessageDialog(this, "Visita creada correctamente.");
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int visitaId = Integer.parseInt(txtVisitaId.getText());
        int clienteId = Integer.parseInt(txtClienteId.getText());
        int tiqueteId = Integer.parseInt(txtTiqueteId.getText());
        
        ClienteControlador clienteControlador = new ClienteControlador();
        Cliente clienteAsociado = clienteControlador.obtenerClientePorId(clienteId);
        
        TiqueteControlador tiqueteControlador = new TiqueteControlador();
        Tiquete tiqueteAsociado = tiqueteControlador.obtenerTiquetePorId(tiqueteId);
        
        Visitas nuevaVisita = new Visitas(clienteAsociado, tiqueteAsociado);
        
        VisitasControlador visitasControlador = new VisitasControlador();
        visitasControlador.actualizarVisita(visitaId, nuevaVisita);
        
        JOptionPane.showMessageDialog(this, "Visita actualizada correctamente.");
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        int visitaId = Integer.parseInt(txtVisitaId.getText());
        
        VisitasControlador visitasControlador = new VisitasControlador();
        visitasControlador.eliminarVisita(visitaId);
        
        JOptionPane.showMessageDialog(this, "Visita eliminada correctamente.");
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnLeerTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeerTodasActionPerformed
        cargarVisitasEnTabla(tablaVisitas);
    }//GEN-LAST:event_btnLeerTodasActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        dispose();
        VistaEmpleado vistaEmpleado = new VistaEmpleado();
        vistaEmpleado.setLocationRelativeTo(null);
        vistaEmpleado.setVisible(true);
    }//GEN-LAST:event_btnAtrasActionPerformed
    
    public void cargarVisitasEnTabla(javax.swing.JTable tablaVisitas) {
        // Obtener el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) tablaVisitas.getModel();

        // Limpiar la tabla antes de cargar nuevos datos
        modelo.setRowCount(0);

        // Crear un controlador o acceso al DAO de Visitas
        VisitasControlador visitasControlador = new VisitasControlador();
        List<Visitas> visitas = visitasControlador.obtenerTodasLasVisitas();

        // Iterar por la lista de visitas y agregar filas al modelo
        for (Visitas visita : visitas) {
            Cliente cliente = visita.getClienteAsociado();
            Tiquete tiquete = visita.getTiqueteAsociado();
            modelo.addRow(new Object[]{
                visita.getId(), // ID de la visita
                cliente.getId(), // ID del cliente
                tiquete.getId(), // ID del tiquete
                cliente.getNombre() // Nombre del cliente
            });
        }
    }

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnLeer;
    private javax.swing.JButton btnLeerTodas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaVisitas;
    private javax.swing.JTextField txtClienteId;
    private javax.swing.JTextField txtTiqueteId;
    private javax.swing.JTextField txtVisitaId;
    // End of variables declaration//GEN-END:variables
}
