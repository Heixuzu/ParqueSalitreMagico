/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import controlador.ClienteControlador;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;

/**
 *
 * @author Heidy
 */
public class VistaClientes extends javax.swing.JFrame {

    /**
     * Creates new form VistaClientes
     */
    public VistaClientes() {
        initComponents();
        setTitle("Clientes");
        cargarClientesEnTabla(jTable1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtClienteId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtEstatura = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtContacto = new javax.swing.JTextField();
        btnLeerTodos = new javax.swing.JButton();
        btnCrear = new javax.swing.JButton();
        btnLeer = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAtras = new javax.swing.JButton();

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jLabel2.setText("Clientes");

        jLabel1.setText("Aquí podrás gestionar los clientes");

        jLabel3.setText("cliente_id");

        jLabel4.setText("cedula");

        jLabel5.setText("nombre");

        jLabel6.setText("telefono");

        jLabel7.setText("email");

        jLabel8.setText("estatura");

        jLabel9.setText("edad");

        jLabel10.setText("contacto");

        btnLeerTodos.setText("Leer todos");
        btnLeerTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeerTodosActionPerformed(evt);
            }
        });

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnLeer.setText("Leer");
        btnLeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeerActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "cliente_id", "cedula", "nombre", "telefono", "email", "estatura", "edad", "contacto"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnAtras.setText("Atrás");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAtras))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtCedula))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtClienteId, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNombre))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTelefono)))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtEdad))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtEstatura)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnCrear, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnEditar, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(39, 39, 39)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnLeer)))
                                    .addComponent(btnLeerTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(47, 47, 47))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAtras))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtClienteId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(txtEstatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(txtContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCrear)
                                .addGap(16, 16, 16)
                                .addComponent(btnEditar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnLeer)
                                .addGap(16, 16, 16)
                                .addComponent(btnBorrar)))
                        .addGap(18, 18, 18)
                        .addComponent(btnLeerTodos)))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLeerTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeerTodosActionPerformed
        cargarClientesEnTabla(jTable1);
    }//GEN-LAST:event_btnLeerTodosActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        // Convertir los valores ingresados a los tipos correspondientes
            int cedula = Integer.parseInt(txtCedula.getText());  // Convierte a int
            String nombre = txtNombre.getText();  // Texto, no necesita conversión
            int telefono = Integer.parseInt(txtTelefono.getText());  // Convierte a int
            String email = txtEmail.getText();  // Texto, no necesita conversión
            double estatura = Double.parseDouble(txtEstatura.getText());  // Convierte a double
            int edad = Integer.parseInt(txtEdad.getText());  // Convierte a int
            Integer contacto = null;

            // Si el campo de contacto no está vacío, convertirlo a Integer
            if (!txtContacto.getText().isEmpty()) {
                contacto = Integer.parseInt(txtContacto.getText());  // Convierte a Integer
            }
            
            if (edad < 18 && txtContacto.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Si el cliente es menor de edad, debes ingresar el número de cédula de su acompañante");
            }

            // Crear el objeto Cliente con los datos obtenidos
            Cliente cliente = new Cliente(cedula, nombre, telefono, email, estatura, edad, contacto);

            // Crear el controlador y llamar al método insertarCliente
            ClienteControlador clienteControlador = new ClienteControlador();
            clienteControlador.insertarCliente(cliente);
            
            JOptionPane.showMessageDialog(this, "Cliente creado correctamente.");
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnLeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeerActionPerformed
        int clienteId = Integer.parseInt(txtClienteId.getText());
        
        ClienteControlador clienteControlador = new ClienteControlador();
        Cliente cliente = clienteControlador.obtenerClientePorId(clienteId);
        
        // Obtener el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();

        // Limpiar la tabla antes de cargar nuevos datos
        modelo.setRowCount(0);
        
        if (cliente != null) {
            // Agregar una única fila al modelo
             modelo.addRow(new Object[]{
                cliente.getId(),                   // ID del cliente
                cliente.getCedula(),               // Cédula del cliente
                cliente.getNombre(),               // Nombre del cliente
                cliente.getTelefono(),             // Teléfono del cliente
                cliente.getEmail(),                // Email del cliente
                cliente.getEstatura(),             // Estatura del cliente
                cliente.getEdad(),                 // Edad del cliente
                cliente.getContacto()              // Contacto de emergencia del cliente
            });
        } else {
            // Mostrar mensaje si no se encontró la visita
            JOptionPane.showMessageDialog(null, "No se encontró el cliente con el ID especificado.",
                                          "Información", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_btnLeerActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
            
            int clienteId = Integer.parseInt(txtClienteId.getText());
            int cedula = Integer.parseInt(txtCedula.getText());  // Convierte a int
            String nombre = txtNombre.getText();  // Texto, no necesita conversión
            int telefono = Integer.parseInt(txtTelefono.getText());  // Convierte a int
            String email = txtEmail.getText();  // Texto, no necesita conversión
            double estatura = Double.parseDouble(txtEstatura.getText());  // Convierte a double
            int edad = Integer.parseInt(txtEdad.getText());  // Convierte a int
            Integer contacto = null;

            // Si el campo de contacto no está vacío, convertirlo a Integer
            if (!txtContacto.getText().isEmpty()) {
                contacto = Integer.parseInt(txtContacto.getText());  // Convierte a Integer
            }
            
            if (edad < 18 && txtContacto.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Si el cliente es menor de edad, debes ingresar el número de cédula de su acompañante");
            }

            // Crear el objeto Cliente con los datos obtenidos
            Cliente cliente = new Cliente(cedula, nombre, telefono, email, estatura, edad, contacto);
    

            // Crear el controlador y llamar al método insertarCliente
            ClienteControlador clienteControlador = new ClienteControlador();
            clienteControlador.actualizarCliente(clienteId, cliente);
            
            JOptionPane.showMessageDialog(this, "Cliente actualizado correctamente.");
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        int clienteId = Integer.parseInt(txtClienteId.getText());
        
        ClienteControlador clienteControlador = new ClienteControlador();
        clienteControlador.eliminarCliente(clienteId);
        
        
        
        JOptionPane.showMessageDialog(this, "Cliente eliminado correctamente.");
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
            dispose();
            VistaAdministracion vistaAdministracion = new VistaAdministracion();
            vistaAdministracion.setLocationRelativeTo(null);
            vistaAdministracion.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_btnAtrasActionPerformed
    
    public void cargarClientesEnTabla(javax.swing.JTable tablaClientes) {
        // Obtener el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) tablaClientes.getModel();

        // Limpiar la tabla antes de cargar nuevos datos
        modelo.setRowCount(0);

        // Crear un controlador o acceso al DAO de Clientes
        ClienteControlador clienteControlador = new ClienteControlador();

        // Obtener todos los clientes desde el controlador
        List<Cliente> clientes = clienteControlador.obtenerTodosLosClientes();

        // Iterar por la lista de clientes y agregar filas al modelo
        for (Cliente cliente : clientes) {
            modelo.addRow(new Object[]{
                cliente.getId(),                   // ID del cliente
                cliente.getCedula(),               // Cédula del cliente
                cliente.getNombre(),               // Nombre del cliente
                cliente.getTelefono(),             // Teléfono del cliente
                cliente.getEmail(),                // Email del cliente
                cliente.getEstatura(),             // Estatura del cliente
                cliente.getEdad(),                 // Edad del cliente
                cliente.getContacto()              // Contacto de emergencia del cliente
            });
        }
    }
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnLeer;
    private javax.swing.JButton btnLeerTodos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtClienteId;
    private javax.swing.JTextField txtContacto;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEstatura;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
